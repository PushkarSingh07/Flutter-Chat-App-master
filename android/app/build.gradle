// +plugins {
// +    id "com.android.application"
// +    id "kotlin-android"
// +    id "dev.flutter.flutter-gradle-plugin"
// +}
//  plugins {
//      id "com.android.application"
//      id "dev.flutter.flutter-gradle-plugin"
//      id "org.jetbrains.kotlin.android"
// +    id "com.google.gms.google-services"
// +    id "com.google.firebase.crashlytics"
//  }

// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     id "dev.flutter.flutter-gradle-plugin" // Ensure this line is present
// }

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dev.flutter.flutter-gradle-plugin' // Ensure this is present
}


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// def flutterRoot = localProperties.getProperty('flutter.sdk')
// if (flutterRoot == null) {
//     throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
// }

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
// apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'


// android {
//     namespace "com.example.first_app"
//     compileSdkVersion flutter.compileSdkVersion
//     ndkVersion flutter.ndkVersion
android {
    namespace "com.example.first_app"
    compileSdkVersion 34 // Update with your desired SDK version

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.first_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        //minSdkVersion flutter.minSdkVersion
        minSdkVersion 21
        targetSdkVersion 34
        //targetSdkVersion flutter.targetSdkVersion
        // versionCode flutterVersionCode.toInteger()
        // versionName flutterVersionName
        versionCode 1
        versionName "1.0"
        //mutliDexEnabled true
        multiDexEnabled true
    }

    // defaultConfig {
    //     applicationId "com.example.first_app"
    //     minSdkVersion 21 // Update with your desired min SDK version
    //     targetSdkVersion 34 // Update with your desired target SDK version
    //     versionCode 1
    //     versionName "1.0"
    //     multiDexEnabled true
    // }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // sourceSets {
    //     main.java.srcDirs += 'src/main/kotlin'
    // }

    // defaultConfig {
    //     // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
    //     applicationId "com.example.first_app"
    //     // You can update the following values to match your application needs.
    //     // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
    //     minSdkVersion flutter.minSdkVersion
    //     targetSdkVersion flutter.targetSdkVersion
    //     versionCode flutterVersionCode.toInteger()
    //     versionName flutterVersionName
    //     mutliDexEnabled true
    // }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}



// flutter {
//     source '../..'
// }

// dependencies {
//     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//     compile 'com.android.support:multidex:1.0.0'
//     compile 'com.android.support:appcompat-v7:21.0.0'
// }
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10" // Replace with actual Kotlin version
    implementation 'androidx.multidex:multidex:2.0.1' // Update to correct dependency for multidex
    implementation 'androidx.appcompat:appcompat:1.5.1' // Update to correct dependency for appcompat
}

// dependencies {
//     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10" // Update the Kotlin version as needed
//     implementation 'androidx.core:core-ktx:1.6.0' // Add core-ktx for Kotlin Android support
//     implementation 'androidx.appcompat:appcompat:1.5.1' // AppCompat for Android compatibility
// }

dependencies {
    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:33.2.0"))

    // Add the dependency for the Cloud Storage library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-storage")
}

// plugins {
//     id 'com.android.application'
//     id 'org.jetbrains.kotlin.android'
//     id 'com.google.gms.google-services'
//     id 'com.google.firebase.crashlytics'
//     id 'dev.flutter.flutter-gradle-plugin' // Add Flutter plugin here
// }

// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file('local.properties')
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader('UTF-8') { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
// if (flutterVersionCode == null) {
//     flutterVersionCode = '1'
// }

// def flutterVersionName = localProperties.getProperty('flutter.versionName')
// if (flutterVersionName == null) {
//     flutterVersionName = '1.0'
// }

// android {
//     namespace "com.example.first_app"
//     compileSdkVersion 34

//     defaultConfig {
//         applicationId "com.example.first_app"
//         minSdkVersion 21
//         targetSdkVersion 34
//         versionCode flutterVersionCode.toInteger()
//         versionName flutterVersionName
//         multiDexEnabled true
//     }

//     compileOptions {
//         sourceCompatibility JavaVersion.VERSION_1_8
//         targetCompatibility JavaVersion.VERSION_1_8
//     }

//     kotlinOptions {
//         jvmTarget = '1.8'
//     }

//     buildTypes {
//         release {
//             signingConfig signingConfigs.debug
//         }
//     }
// }

// flutter {
//     source '../..'
// }

// dependencies {
//     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"
//     implementation 'androidx.multidex:multidex:2.0.1'
//     implementation 'androidx.appcompat:appcompat:1.5.1'
//     implementation platform('com.google.firebase:firebase-bom:33.2.0')
//     implementation 'com.google.firebase:firebase-storage'
// }
